/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15 16>;
        };

        ret {
            bindings = <&kp RET>;
            key-positions = <19 20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y           &kp U  &kp I               &kp O    &kp P     &kp BSPC
&kp LCTRL     &kp A  &kp S  &kp D     &kp F  &kp G        &kp H           &kp J  &kp K               &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N           &kp M  &kp COMMA           &kp DOT  &kp FSLH  &kp DELETE
                            &kp LGUI  &mo 1  &kp SPACE    &kp LEFT_SHIFT  &mo 2  &kp K_CONTEXT_MENU
            >;
        };

        num {
            bindings = <
&kp TAB       &kp SLASH     &kp MINUS  &kp N7    &kp N8  &kp N9       &kp PAGE_UP     &kp HOME  &kp END             &trans      &kp MINUS  &kp BSPC
&kp LCTRL     &kp ASTERISK  &kp PLUS   &kp N4    &kp N5  &kp N6       &kp LEFT        &kp DOWN  &kp UP              &kp RIGHT   &kp SQT    &kp BACKSLASH
&kp LEFT_ALT  &kp EQUAL     &kp N0     &kp N1    &kp N2  &kp N3       &kp PAGE_DOWN   &trans    &kp COMMA           &kp PERIOD  &kp SLASH  &kp DELETE
                                       &kp LGUI  &trans  &kp SPACE    &kp LEFT_SHIFT  &trans    &kp K_CONTEXT_MENU
            >;
        };

        symbol {
            bindings = <
&kp TAB       &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp PAGE_UP     &kp HOME  &kp END             &trans     &trans  &kp BSPC
&kp LCTRL     &kp DOLLAR       &kp PERCENT   &kp CARET  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &kp LEFT        &kp DOWN  &kp UP              &kp RIGHT  &trans  &trans
&kp LEFT_ALT  &kp AMPERSAND    &kp ASTERISK  &trans     &kp COMMA             &kp PERIOD               &kp PAGE_DOWN   &trans    &trans              &trans     &trans  &kp DELETE
                                             &kp LGUI   &trans                &kp SPACE                &kp LEFT_SHIFT  &trans    &kp K_CONTEXT_MENU
            >;
        };

        system {
            bindings = <
&kp TAB       &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7   &kp F8              &kp F9           &kp F10     &kp BSPC
&kp LCTRL     &kp F11       &kp F12       &kp F13       &kp F14       &kp F15       &kp F11         &kp F12  &kp F13             &kp F14          &kp F15     &trans
&kp LEFT_ALT  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &trans          &trans   &trans              &kp PRINTSCREEN  &kp INSERT  &kp DELETE
                                          &kp LGUI      &trans        &kp SPACE     &kp LEFT_SHIFT  &trans   &kp K_CONTEXT_MENU
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        system {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
