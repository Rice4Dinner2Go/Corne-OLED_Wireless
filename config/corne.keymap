/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 16>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
        };

        back {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 7>;
        };

        return {
            bindings = <&kp RET>;
            key-positions = <20 19>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <32 31>;
        };

        L_num {
            bindings = <&mo 1>;
            key-positions = <15 14>;
        };

        L_sym {
            bindings = <&mo 2>;
            key-positions = <2 3>;
        };

        L_nav {
            bindings = <&mo 3>;
            key-positions = <37 40>;
        };

        L_sys {
            bindings = <&mo 4>;
            key-positions = <37 40 35 12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE     &kp Q  &kp W  &kp E     &kp R      &kp T             &kp Y      &kp U             &kp I      &kp O    &kp P     &kp BACKSLASH
&kp LCTRL     &kp A  &kp S  &kp D     &kp F      &kp G             &kp H      &kp J             &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C     &kp V      &kp B             &kp N      &kp M             &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                            &kp LGUI  &kp LCTRL  &kp LEFT_SHIFT    &kp SPACE  &kp LEFT_CONTROL  &kp LGUI
            >;
        };

        number {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp MINUS  &kp N7  &kp N8  &kp N9  &kp N0     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PLUS   &kp N4  &kp N5  &kp N6  &kp STAR   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL  &kp N1  &kp N2  &kp N3  &kp SLASH  &trans
                        &trans  &trans  &trans    &trans     &trans  &trans
            >;
        };

        symbol {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(LBRC)  &kp LS(AMPS)  &kp LS(STAR)   &kp TILDE      &kp LS(RBRC)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LS(LPAR)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(RPAR)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LBKT      &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp RBKT      &trans
                        &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        navigation {
            bindings = <
&trans  &mkp MB3        &mkp MB2        &mmv MOVE_UP    &mkp MB1         &msc SCRL_UP       &kp PG_UP  &kp HOME  &kp END  &trans     &trans  &trans
&trans  &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT    &kp LEFT   &kp DOWN  &kp UP   &kp RIGHT  &trans  &trans
&trans  &trans          &trans          &trans          &trans           &msc SCRL_DOWN     &kp PG_DN  &trans    &trans   &trans     &trans  &trans
                                        &trans          &trans           &trans             &trans     &trans    &trans
            >;
        };

        system {
            bindings = <
&trans  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6      &kp F7          &kp F8  &kp F9        &kp F10          &trans
&trans  &kp F11       &kp F12       &kp F13       &kp F14       &kp F15         &trans      &trans          &trans  &trans        &trans           &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_CLR  &bt BT_CLR_ALL  &trans  &kp CAPSLOCK  &kp PRINTSCREEN  &trans
                                    &trans        &trans        &trans          &trans      &trans          &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
